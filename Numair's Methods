// darken/brighten, blur, greyscale
public static void darken(APImage i, int factor){
	      for(Pixel p : i){
	            int r = p.getRed() - factor;
	            int g = p.getGreen() - factor;
	            int b = p.getBlue() - factor;
	            
	            if(r < 0)
	              r = 0;
	            if(g < 0)
	              g = 0;
	            if(b < 0)
	              b = 0;
	              
	            p.setRed(r);
	            p.setGreen(g);
	            p.setBlue(b);
	            
	            }
	         } 
	public static void brighten(APImage i, int factor){
	      for(Pixel p : i){
	            int r = p.getRed() + factor;
	            int g = p.getGreen() + factor;
	            int b = p.getBlue() + factor;
	            
	            if(r > 255)
	              r = 255;
	            if(g > 255)
	              g = 255;
	            if(b > 255)
	              b = 255;
	              
	            p.setRed(r);
	            p.setGreen(g);
	            p.setBlue(b);
	            
	            }
	         }
		 public static void luminance(APImage i) {
		for(Pixel p: i) {
			int r = (int)(p.getRed() * .299);
			int g = (int)(p.getGreen() * .587);
			int b = (int)(p.getBlue() * .114);
			
			int avg = (r + g + b)/3;
			
			p.setRed(avg);
			p.setBlue(avg);
			p.setGreen(avg);
		}
	}
	public static void blur(APImage i) {
		for(int y = 1; y < i.getHeight()-1; y++) {
			for(int x = 1; x < i.getWidth()-1; x+=2) {
				Pixel right = i.getPixel(x+1, y);
				Pixel top = i.getPixel(x, y-1);
				Pixel bottom = i.getPixel(x, y + 1);
				Pixel left = i.getPixel(x - 1, y);
				
				int rAvg = (right.getRed() + top.getRed() + bottom.getRed() + left.getRed()) / 4;
				int gAvg = (right.getGreen() + top.getGreen() + bottom.getGreen() + left.getGreen()) / 4;
				int bAvg = (right.getBlue() + top.getBlue() + bottom.getBlue() + left.getBlue()) / 4;
				Pixel avg = new Pixel(rAvg, gAvg, bAvg);
				
				right = avg;
				top = avg;
				bottom = avg;
				left = avg;
				
			}
		}
	}
